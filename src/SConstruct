import os

ALL_FLAGS = dict()

if ARGUMENTS.get('release', 0) == '1':
    MODE = 'release'
else:
    MODE = 'debug'

if ARGUMENTS.get('profile', 0) == '1':
    PROFILING = True
else:
    PROFILING = False



if os.getenv("CXX") not in ("", None):
    ALL_FLAGS['CXX'] = os.getenv("CXX")
if os.getenv("CC") not in ("", None):
    ALL_FLAGS['CC'] = os.getenv("CC")

BASE_CPPFLAGS = ['-pipe',
                 '-combine',
                 '-ansi',
                 '-Wall',
                 '-fno-strict-aliasing',
                 '-m32']
ADD_CPPFLAGS = dict()
ADD_CPPFLAGS['release'] = ['-O3', '-DNDEBUG']
ADD_CPPFLAGS['debug'] = ['-fno-omit-frame-pointer',
                         '-fno-inline-functions',
                         '-fno-inline-functions-called-once',
                         '-fno-optimize-sibling-calls',
                         '-fno-default-inline',
                         '-fno-inline',
                         '-D_GLIBCXX_PROFILE']
ADD_CPPFLAGS['prof'] = ['-g',
                        '-pg']
                        

BASE_LINKFLAGS = ['-m32',]
ADD_LINKFLAGS = dict()
ADD_LINKFLAGS['release'] = []
ADD_LINKFLAGS['debug'] = []
ADD_LINKFLAGS['prof'] = ['-pg',]

ALL_FLAGS['LINKFLAGS'] = BASE_LINKFLAGS + ADD_LINKFLAGS[MODE]
ALL_FLAGS['CPPFLAGS'] =  BASE_CPPFLAGS + ADD_CPPFLAGS[MODE]

if PROFILING:
   ALL_FLAGS['LINKFLAGS'] += ADD_LINKFLAGS['prof']
   ALL_FLAGS['CPPFLAGS'] +=  ADD_CPPFLAGS['prof']


ALL_FLAGS['LIBS'] = ['QtCore', 'glog']


env = Environment(**ALL_FLAGS)

Export('env')

SConscript([#'core/SConscript',
            #'algos/SConscript',
            'app/SConscript',])
	    #'python/SConscript'])
