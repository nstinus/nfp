import distutils.sysconfig

MODE = 'prod'

BASE_CPPFLAGS = ['-pipe',
            '-combine',
            '-ansi',
            '-Wall',
            '-fno-strict-aliasing']
ADD_CPPFLAGS = dict()
ADD_CPPFLAGS['prod'] = ['-O3',
                        '-DNDEBUG']
ADD_CPPFLAGS['test'] = ['-g',
                        '-pg',
                        '-fno-omit-frame-pointer',
                        '-fno-inline-functions',
                        '-fno-inline-functions-called-once',
                        '-fno-optimize-sibling-calls',
                        '-fno-default-inline',
                        '-fno-inline']

BASE_LINKFLAGS = []
ADD_LINKFLAGS = dict()
ADD_LINKFLAGS['prod'] = []
ADD_LINKFLAGS['test'] = ['-pg',]

BASE_SWIGFLAGS = ['-c++',
	          '-python']

env = Environment(SWIGFLAGS = BASE_SWIGFLAGS,
                  CPPPATH=("/Library/Frameworks/Python.framework/Versions/2.6/include/python2.6",
		           "/Library/Frameworks/QtCore.framework/Headers",
			   "../core",
			   "../algos"),
	          LIBS=('python2.6', 'QtCore', 'glog'),
		  LIBPATH="/Library/Frameworks/Python.framework/Versions/2.6/lib",
                  SHLIBPREFIX="",
		   CPPFLAGS = BASE_CPPFLAGS + ADD_CPPFLAGS[MODE],
		   LINKFLAGS = BASE_LINKFLAGS + ADD_LINKFLAGS[MODE])

env.SharedLibrary('_nfp.so',
		  ['nfp.i', Glob('../core/*.cpp'), Glob('../algos/*.cpp')])

